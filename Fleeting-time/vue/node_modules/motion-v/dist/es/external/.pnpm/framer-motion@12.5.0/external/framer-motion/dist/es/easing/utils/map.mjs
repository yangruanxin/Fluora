import { invariant } from "../../../../../../../motion-utils@12.5.0/external/motion-utils/dist/es/errors.mjs";
import { noop } from "../../../../../../../motion-utils@12.5.0/external/motion-utils/dist/es/noop.mjs";
import { isBezierDefinition } from "../../../../../../../motion-dom@12.5.0/external/motion-dom/dist/es/utils/is-bezier-definition.mjs";
import { anticipate } from "../anticipate.mjs";
import { backIn, backInOut, backOut } from "../back.mjs";
import { circIn, circInOut, circOut } from "../circ.mjs";
import { cubicBezier } from "../cubic-bezier.mjs";
import { easeIn, easeInOut, easeOut } from "../ease.mjs";
const easingLookup = {
  linear: noop,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate
};
const easingDefinitionToFunction = (definition) => {
  if (isBezierDefinition(definition)) {
    invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);
    const [x1, y1, x2, y2] = definition;
    return cubicBezier(x1, y1, x2, y2);
  } else if (typeof definition === "string") {
    invariant(easingLookup[definition] !== void 0, `Invalid easing type '${definition}'`);
    return easingLookup[definition];
  }
  return definition;
};
export {
  easingDefinitionToFunction
};

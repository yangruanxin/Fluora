import "../../../../../../../../motion-utils@12.5.0/external/motion-utils/dist/es/errors.mjs";
import { millisecondsToSeconds } from "../../../../../../../../motion-utils@12.5.0/external/motion-utils/dist/es/time-conversion.mjs";
import { calcGeneratorDuration, maxGeneratorDuration } from "./calc-duration.mjs";
function createGeneratorEasing(options, scale = 100, createGenerator) {
  const generator = createGenerator({ ...options, keyframes: [0, scale] });
  const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);
  return {
    type: "keyframes",
    ease: (progress) => {
      return generator.next(duration * progress).value / scale;
    },
    duration: millisecondsToSeconds(duration)
  };
}
export {
  createGeneratorEasing
};

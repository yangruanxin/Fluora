export declare const MotionComponentProps: {
    ignoreStrict: {
        type: BooleanConstructor;
    };
    forwardMotionProps: {
        type: BooleanConstructor;
        default: boolean;
    };
    asChild: {
        type: BooleanConstructor;
        default: boolean;
    };
    hover: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
    };
    press: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
    };
    inView: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
    };
    focus: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
    };
    whileDrag: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
    };
    whileHover: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
        default: ({ hover }: {
            hover: any;
        }) => any;
    };
    whilePress: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
        default: ({ press }: {
            press: any;
        }) => any;
    };
    whileInView: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
        default: ({ inView }: {
            inView: any;
        }) => any;
    };
    whileFocus: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
        default: ({ focus }: {
            focus: any;
        }) => any;
    };
    custom: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor | NumberConstructor)[];
    };
    initial: {
        type: (ArrayConstructor | BooleanConstructor | ObjectConstructor | StringConstructor)[];
        default: any;
    };
    animate: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
        default: any;
    };
    exit: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor)[];
    };
    variants: {
        type: ObjectConstructor;
    };
    inherit: {
        type: BooleanConstructor;
    };
    style: {
        type: ObjectConstructor;
    };
    transformTemplate: {
        type: FunctionConstructor;
    };
    transition: {
        type: ObjectConstructor;
    };
    layoutGroup: {
        type: ObjectConstructor;
    };
    motionConfig: {
        type: ObjectConstructor;
    };
    onAnimationComplete: {
        type: FunctionConstructor;
    };
    onUpdate: {
        type: FunctionConstructor;
    };
    layout: {
        type: (BooleanConstructor | StringConstructor)[];
        default: boolean;
    };
    layoutId: {
        type: StringConstructor;
        default: any;
    };
    layoutScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    layoutRoot: {
        type: BooleanConstructor;
        default: boolean;
    };
    'data-framer-portal-id': {
        type: StringConstructor;
    };
    crossfade: {
        type: BooleanConstructor;
        default: boolean;
    };
    layoutDependency: {
        type: (ArrayConstructor | ObjectConstructor | StringConstructor | NumberConstructor)[];
    };
    onBeforeLayoutMeasure: {
        type: FunctionConstructor;
    };
    onLayoutMeasure: {
        type: FunctionConstructor;
    };
    onLayoutAnimationStart: {
        type: FunctionConstructor;
    };
    onLayoutAnimationComplete: {
        type: FunctionConstructor;
    };
    globalPressTarget: {
        type: BooleanConstructor;
    };
    onPressStart: {
        type: FunctionConstructor;
    };
    onPress: {
        type: FunctionConstructor;
    };
    onPressCancel: {
        type: FunctionConstructor;
    };
    onHoverStart: {
        type: FunctionConstructor;
    };
    onHoverEnd: {
        type: FunctionConstructor;
    };
    inViewOptions: {
        type: ObjectConstructor;
    };
    onViewportEnter: {
        type: FunctionConstructor;
    };
    onViewportLeave: {
        type: FunctionConstructor;
    };
    drag: {
        type: (BooleanConstructor | StringConstructor)[];
    };
    dragSnapToOrigin: {
        type: BooleanConstructor;
    };
    dragDirectionLock: {
        type: BooleanConstructor;
    };
    dragPropagation: {
        type: BooleanConstructor;
    };
    dragConstraints: {
        type: (BooleanConstructor | ObjectConstructor)[];
    };
    dragElastic: {
        type: (BooleanConstructor | ObjectConstructor | NumberConstructor)[];
        default: number;
    };
    dragMomentum: {
        type: BooleanConstructor;
        default: boolean;
    };
    dragTransition: {
        type: ObjectConstructor;
    };
    dragListener: {
        type: BooleanConstructor;
        default: boolean;
    };
    dragControls: {
        type: ObjectConstructor;
    };
    onDragStart: {
        type: FunctionConstructor;
    };
    onDragEnd: {
        type: FunctionConstructor;
    };
    onDrag: {
        type: FunctionConstructor;
    };
    onDirectionLock: {
        type: FunctionConstructor;
    };
    onDragTransitionEnd: {
        type: FunctionConstructor;
    };
    onMeasureDragConstraints: {
        type: FunctionConstructor;
    };
    onPanSessionStart: {
        type: FunctionConstructor;
    };
    onPanStart: {
        type: FunctionConstructor;
    };
    onPan: {
        type: FunctionConstructor;
    };
    onPanEnd: {
        type: FunctionConstructor;
    };
};
